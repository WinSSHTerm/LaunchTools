<?xml version="1.0" encoding="utf-8"?>
<WinSSHTerm_Launch_Tool version="1">
  <name>VNC client</name>
  <version>1.1</version>
  <description><![CDATA[
This launch tool lets you easily start VNC sessions with TigerVNC (https://github.com/TigerVNC/tigervnc). Make sure that the viewer is available on your system. If you use the installer version of TigerVNC (tigervnc64-X.Y.Z.exe), then no changes should need to be made to the parameters of this launch tool. Alternatively, you can download the standalone Viewer (vncviewer64-X.Y.Z.exe).

Connection configuration:
* HOST/IP: the hostname to connect via VNC
* Port: the VNC port to connect to (e.g. 5900)
* Password: needed in case LT.HANDLE_CREDENTIALS_AUTOMATICALLY is set to true (see below)

Parameters:
* LT.VNC_VIEWER_BINARY_PATH_TYPE [absolute|tools]: With "absolute", the script will use LT.VNC_VIEWER_BINARY_ABSOLUTE_PATH to get the path to the viewer binary. With "tools", the script will read the viewer binary name from LT.VNC_VIEWER_BINARY_TOOLS and assume the binary is in the directory "tools" of your WinSSHTerm's directory.
* LT.VNC_VIEWER_BINARY_ABSOLUTE_PATH [valid path to exe]: An absolute path to the viewer binary
* LT.VNC_VIEWER_BINARY_TOOLS [filename]: The filename of the viewer binary (e.g. vncviewer64-1.15.0.exe)
* LT.HANDLE_CREDENTIALS_AUTOMATICALLY [true|false]: If true, the script will temporarily save the VNC password into a environment variable VNC_PASSWORD and use it for authentication. If false, the user has to manually input the VNC password.
]]></description>
  <params>
    <param>
      <name>LT.VNC_VIEWER_BINARY_PATH_TYPE</name>
      <value>absolute</value>
    </param>
    <param>
      <name>LT.VNC_VIEWER_BINARY_ABSOLUTE_PATH</name>
      <value>C:\Program Files\TigerVNC\vncviewer.exe</value>
    </param>
    <param>
      <name>LT.VNC_VIEWER_BINARY_TOOLS</name>
      <value></value>
    </param>
    <param>
      <name>LT.HANDLE_CREDENTIALS_AUTOMATICALLY</name>
      <value>true</value>
    </param>
  </params> 
  <options>
    <option>
      <name>LTOPT.WINDOW_HIDE_TIME_IN_MILLIS</name>
      <value>1000</value>
    </option>
    <option>
      <name>LTOPT.KILL_PROCS_ON_WINDOW_CLOSE</name>
      <value>false</value>
    </option>
    <option>
      <name>LTOPT.LAUNCH_TERMINAL</name>
      <value>false</value>
    </option>
    <option>
      <name>LTOPT.LAUNCH_COPY_FILES</name>
      <value>false</value>
    </option>
  </options>
  <script><![CDATA[
# Set this variable to stop on the first error
$ErrorActionPreference = "Stop"

# Build the path for the viewer binary
$pathType = "{{LT.VNC_VIEWER_BINARY_PATH_TYPE}}"
switch ($pathType) {
  "absolute" { 
    $vncviewerPath = "{{LT.VNC_VIEWER_BINARY_ABSOLUTE_PATH}}"
  }
  "tools" { 
    $toolsPath = (Join-Path (Resolve-Path (Join-Path "{{WST.TEMPPATH}}" "..\..")).Path "tools")
    $vncviewerPath = Join-Path -Path $toolsPath -ChildPath "{{LT.VNC_VIEWER_BINARY_TOOLS}}"
  }
  default { 
    $vncviewerPath = "{{LT.VNC_VIEWER_BINARY_ABSOLUTE_PATH}}"
  }
}

if (${{LT.HANDLE_CREDENTIALS_AUTOMATICALLY}}) {
  # Store VNC password into an environment variable
  if (-not [string]::IsNullOrEmpty("{{CON.PASSWD}}")) {
    $env:VNC_PASSWORD = "{{CON.PASSWD}}"
  }
}

# Run VNC viewer
& "$vncviewerPath" {{CON.HOST}}::{{CON.PORT}}

if (${{LT.HANDLE_CREDENTIALS_AUTOMATICALLY}}) {
  # Clear the password from the environment variable
  $env:VNC_PASSWORD = $null
}

# The script finished successfully
Write-Host "WinSSHTerm_script_finished"
]]></script>
</WinSSHTerm_Launch_Tool>
